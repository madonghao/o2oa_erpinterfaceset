<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.o2oa</groupId>
		<artifactId>o2oa_erpinterfaceset</artifactId>
		<version>7.3</version>
	</parent>
	<artifactId>x_erpinterfaceset_assemble_control</artifactId>
	<packaging>war</packaging>
	<dependencies>
		<dependency>
			<groupId>net.o2oa</groupId>
			<artifactId>x_base_core_project</artifactId>
		</dependency>
		<dependency>
			<groupId>net.o2oa</groupId>
			<artifactId>x_organization_core_entity</artifactId>
		</dependency>
		<dependency>
			<groupId>net.o2oa</groupId>
			<artifactId>x_organization_core_express</artifactId>
		</dependency>
		<dependency>
			<groupId>net.o2oa</groupId>
			<artifactId>x_erpinterfaceset_core_entity</artifactId>
			<version>7.3</version>
		</dependency>
		<dependency>
			<groupId>com.kingdee</groupId>
			<artifactId>erpSDK</artifactId>
			<version>8.0.6</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/ext/k3cloud-webapi-sdk8.0.6.jar</systemPath>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>DescribeWoBuilder</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<addOutputToClasspath>true</addOutputToClasspath>
							<includePluginDependencies>true</includePluginDependencies>
							<includeProjectDependencies>true</includeProjectDependencies>
							<mainClass>com.x.base.core.project.annotation.DescribeWoBuilder</mainClass>
							<arguments>
								<argument>${basedir}</argument>
								<argument>${project.build.sourceDirectory}</argument>
							</arguments>
						</configuration>
					</execution>

					<execution>
						<id>describeBuilder</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<addOutputToClasspath>true</addOutputToClasspath>
							<includePluginDependencies>true</includePluginDependencies>
							<includeProjectDependencies>true</includeProjectDependencies>
							<mainClass>com.x.base.core.project.annotation.DescribeBuilder</mainClass>
							<arguments>
								<argument>${basedir}</argument>
								<argument>${project.build.sourceDirectory}</argument>
							</arguments>
						</configuration>
					</execution>

					<execution>
						<id>apiBuilder</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<addOutputToClasspath>true</addOutputToClasspath>
							<includePluginDependencies>true</includePluginDependencies>
							<includeProjectDependencies>true</includeProjectDependencies>
							<mainClass>com.x.base.core.project.annotation.ApiBuilder</mainClass>
							<arguments>
								<argument>${basedir}</argument>
								<argument>${project.build.sourceDirectory}</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>checkAssemble</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<addOutputToClasspath>true</addOutputToClasspath>
							<includePluginDependencies>true</includePluginDependencies>
							<includeProjectDependencies>true</includeProjectDependencies>
							<mainClass>com.x.base.core.project.build.CheckAssemble</mainClass>
						</configuration>
					</execution>
					<execution>
						<id>createWebXml</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<addOutputToClasspath>true</addOutputToClasspath>
							<includePluginDependencies>true</includePluginDependencies>
							<includeProjectDependencies>true</includeProjectDependencies>
							<mainClass>com.x.base.core.project.build.CreateWebXml</mainClass>
							<arguments>
								<argument>${basedir}</argument>
								<argument>${project.artifactId}</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-war</id>
						<phase>verify</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>../store</outputDirectory>
							<resources>
								<resource>
									<directory>target</directory>
									<includes>
										<include>${project.artifactId}.war</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
            <plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.3</version>
				<executions>
					<execution>
						<id>default-war</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
						<configuration>
							<archive>
								<addMavenDescriptor>false</addMavenDescriptor>
							</archive>
							<packagingExcludes>persistence.xml,WEB-INF/lib/**,META-INF</packagingExcludes>
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<webResources>
								<resource>
									<directory>ext</directory>
									<targetPath>WEB-INF/ext</targetPath>
								</resource>
							</webResources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
